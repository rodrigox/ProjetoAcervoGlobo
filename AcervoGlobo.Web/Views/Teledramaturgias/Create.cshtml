@model AcervoGlobo.Dominio.Teledramaturgia

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
@section Scripts {

    <script type="text/javascript" language="javascript">
        $(document).ready(function () {
            $('#atorAutoComplete').autocomplete({
                source: function (request, response) {
                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("Autocomplete", "Ators")',
                        data: {
                            term: $('#atorAutoComplete').val()
                        },
                        success: function (dados) {
                           // alert("Data Saved: " + dados);
                            for (var i = 0, count = dados.length; i < count; i++) {
                                $('#idAtoresSelecionados').append("<li>" +
                                                                    "  <label id='idNome'>" + dados[i].Nome + "</label>" +
                                                                    "  <input id='idId' values=" + dados[i].Id + " type='hidden' />" +
                                                                    "</li>");
                            }
                            
                        },
                        error: function (data) {
                            alert(data);
                        }
                    })
                }
            });
        })
    </script>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Teledramaturgia</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.eGenero, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.eGenero, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.eGenero, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Ator</label>
            <div class="col-md-10">
                <input type="text" id="atorAutoComplete" class="autoComplete" />
                <ul id="idAtoresSelecionados"></ul>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AnoLancamento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AnoLancamento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AnoLancamento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


